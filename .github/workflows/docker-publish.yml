name: On Tag, Build and Push MEVN Docker Images to GHCR

on:
  push:
    tags:
      - '*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write  # Required to push images to GHCR

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Convert repository owner to lowercase (docker image names must all be lowercase)
      - name: Set repository owner lowercase
        id: owner_lowercase
        run: echo "owner_lowercase=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Step 4: Build the Vue app
      - name: Install and Build Vue App
        run: |
          cd vue/mevn-todo-app
          npm ci # Install dependencies (prefer ci for CI environments)
          npm run build # Build the Vue app
          cd ../../ # Return to home directory
      # Step 5: Get the tag associated with push for the vue image
      - name: Extract metadata for Vue Docker image
        id: vue_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.owner_lowercase }}/mevn-vue-todo
          tags: |
            type=ref,event=tag
      # Step 6: Build and Push Vue Docker Image
      - name: Build and Push Vue App Image
        uses: docker/build-push-action@v5
        with:
          context: vue/mevn-todo-app
          push: true
          tags: ${{ steps.vue_meta.outputs.tags }}

      # Step 7: Get the tag associated with push for the express image
      - name: Extract metadata for Express Docker image
        id: express_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.owner_lowercase }}/mevn-express-todo
          tags: |
            type=ref,event=tag
      # Step 8: Build and Push Express Docker Image
      - name: Build and Push Express App Image
        uses: docker/build-push-action@v5
        with:
          context: express
          push: true
          tags: ${{ steps.express_meta.outputs.tags }}

      # Step 9: Get the tag associated with push for the mongo image
      - name: Extract metadata for Mongo Docker image
        id: mongo_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.owner_lowercase }}/mevn-mongo-todo
          tags: |
            type=ref,event=tag
      # Step 10: Build and Push Mongo Docker Image
      - name: Build and Push Mongo Image
        uses: docker/build-push-action@v5
        with:
          context: mongoDB
          push: true
          tags: ${{ steps.mongo_meta.outputs.tags }}
